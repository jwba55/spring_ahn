<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

		<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
		
		<!-- Enables the Spring MVC @Controller programming model -->
		<!-- 
			@component:
				@controller, @service, @repository는 모두 명시적일뿐 @component에 속해 있음.
			
		 -->
		<annotation-driven />
	
		<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
		<!-- 정적 리소스를 읽어오는 경로 설정(이미지, 동영상, css, 스크립트 등등) -->
		<!-- 자바 스크립트는 다이나믹이 아니라 정적 리소스인 이유가 브라우저에서 돌아가는 것이지 프로젝트 입장에서는 그저 텍스트일 뿐이다. -->
		<!-- 
			resources 태그를 통해서 dispatcher servlet에 등록해서 관리하도록 함.
		 -->
		<resources mapping="/resources/**" location="/resources/" />
		<resources location="/resources/static/js/" mapping="/js/**"></resources>
		<resources location="/resources/static/images/" mapping="/images/**"></resources>
		<resources location="/resources/static/css/" mapping="/css/**"></resources>	<!-- location은 실제 폴더 명이다. mapping은 사용자가 입력하는 경로이다. -->
	
		<!-- jsp를 읽어들이도록 하는 설정 -->
		<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
		<!-- 
			과거에는 앱과 웹의 접근을 구분해서 처리하기위해서 viewResolver를 2개를 등록해서 사용했었음.
				또는 확장자에 따라서 다른 결과를 도출되는 프로그램을 만들어서 사용.
			
			현재에는 앱과 웹을 동시처리하기 위해서 어떻게 하는가?
		 -->
		<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			<beans:property name="prefix" value="/WEB-INF/views/" />		<!-- 어느 경로에 있는 파일들을 읽을 것인지 설정한다. -->
			<beans:property name="suffix" value=".jsp" />					<!-- 어떤 확장자의 파일을 읽어 들일 것인가? -->
		</beans:bean>
		
		<!-- 해당 패키지 밑에서 찾게끔 설정하는 것 -->
		<context:component-scan base-package="kr.co.kopo" />
		<!-- 트랜잭션 설정: 트랜잭션을 통해서 여러 테이블을 조인하여 설정했을때 여러 테이블 중 하나에서라도 문제가 생기면 예외 처리: 모든 과정이 성공했을때에만 데이터베이스에 반영 -->
		<tx:annotation-driven/>
	
		<interceptors>
			<interceptor>
				<mapping path="/admin/**"/>		<!-- 접근 제한할 주소 -->
				<mapping path="/users/list"/>
				
				<beans:bean class="kr.co.kopo.interceptor.AdminInterceptor"></beans:bean>	<!-- 어떤걸 실행시킬지 -->
			</interceptor>
			<interceptor>
				<mapping path="/users/**"/>
				<mapping path="/orders/**"/>
				<mapping path="/book/**"/>
				
				<exclude-mapping path="/users/list"/>
				
				<beans:bean class="kr.co.kopo.interceptor.UsersInterceptor"></beans:bean>	<!-- 어떤걸 실행시킬지 -->
			</interceptor>
		</interceptors>
	</beans:beans>