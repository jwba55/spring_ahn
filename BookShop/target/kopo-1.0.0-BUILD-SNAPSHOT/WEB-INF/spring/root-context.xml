<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">	<!-- class안에 BDS라고 입력하면 뜸 -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>	<!-- 오라클을 사용하기에 오라클로 설정 -->
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="book"></property>	<!-- DB에 설정한 유저아이디 -->
		<property name="password" value="1234"></property>	<!-- DB에 설정한 유저 비밀번호 -->
	</bean>
	
	<!-- 3개의 빈을 각각 ref로 연결되어 있음. -->
	<!-- 이 템플릿을 통해서 xml과 annotation을 하이브리드하게 사용하기위해 이것을 사용함. -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">	<!-- 클래스명 약자: SSFB -->
		<property name="dataSource" ref="dataSource"></property>	<!-- ref는 객체를 끌어올 때 사용함. -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>	<!-- mybatis에 대한 환경설정이 필요한데 이 파일을 찾아서 사용해라 -->
	</bean>
	
	<!-- 
		Dao에서 sqlSessionTemplate을 요청하면 이 템플릿이 factory에 DB를 연결해달라고 함.
		Factory:
			내부적으로 조합해서 한 덩어리로 만듦.
	 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">	<!-- class안에 SST라고 입력하고 ctrl+space -->
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<!--
			또 다른 방식: <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
		-->
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource" />
	</bean>
		
</beans>
